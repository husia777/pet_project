version: "3.9"

services:
  front:
    depends_on:
      - api
    image: sermalenk/skypro-front:base
    ports:
      - 80:80
    networks:
      - front
  api:
    image: 'husia777/todo:1'
    depends_on:
      - migrations
      - postgres
    command: python manage.py runserver 0.0.0.0:8000
    expose:
      - 8000
    links:
      - postgres
    volumes:
      - ./:/usr/src/app
    networks:
      - front
      - db

  migrations:
    image: 'husia777/todo:1'
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432

    volumes:
      - ./backend/core/migrations:/usr/src/app/backend/core/migrations
    command: >
      sh -c "python manage.py makemigrations &&
            python manage.py makemigrations core &&
             python manage.py migrate --noinput"
    networks:
      - db
  postgres:
    image: postgres:14.6-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - "POSTGRES_HOST_AUTH_METHOD=trust"

    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    ports:
      - 5433:5432
    expose:
      - 5433
    networks:
      - db
volumes:
  postgres_data:
networks:
  front:
  db: