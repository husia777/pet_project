version: "3.9"

services:
  front:
    depends_on:
      - api
    image: sermalenk/skypro-front:base
    ports:
      - 8080:80
    networks:
      - main

  api:
    image: 'husia777/todo:1'
    ports:
      - 8000:8000
    expose:
      - 8000
    depends_on:
      - migrations
      - postgres
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000

    volumes:
      - ./:/usr/src/app 
      - static_volume:/usr/src/app/staticfiles
    networks:
      - main

  migrations:
    image: 'husia777/todo:1'
    depends_on:
      - postgres
    volumes:
      - ./backend/core/migrations:/usr/src/app/backend/core/migrations
    command: >
      sh -c "python manage.py makemigrations &&
            python manage.py makemigrations core &&
             python manage.py migrate"
    networks:
      - main
  postgres:
    image: postgres:14.6-alpine
    ports:
      - 5433:5432

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - main
  webserver:
    build: ./nginx
    container_name: webserver
    restart: unless-stopped
    tty: true
    volumes:
      - static_volume:/usr/src/app/staticfiles
    ports:
      - "1337:80"
      - "80:80"
      - "443:443"
    networks:
      - main
volumes:
  postgres_data:
  frontend:
  static_volume:
networks:
  main: